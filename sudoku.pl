#!/usr/bin/perl -w
# -d:DProf sudoku.pl; dprofpp -u
use integer;
sub F { sprintf( (("%s%s%s "x3 ."\n")x3 ."\n")x3, map { $_||"." } @_ ); }
print F( @A = map { /\d/sg } <> );  #  <DATA>

sub R {
    for $i ( 0 .. 80 ) {
        next if $A[$i];
        my %t = map { $A[$i / 27 * 27 + $i % 9 / 3 * 3 + $_ / 3 * 9 + $_ % 3] => 1,
                      $A[$i / 9 * 9 + $_] => 1,
                      $A[$i % 9 + 9 * $_] => 1 } 0 .. 8 ;
#        my @g=grep { !$t{$_} } 1 .. 9; print "$i - @g\n";
        R( $A[$i] = $_ ) for grep { !$t{$_} } 1 .. 9;
        return $A[$i] = 0;
    } 
    die F( @A );
} 
R;
# echo 000010000301400860900500200700160000020805010000097004003004006048006907000080000| perl sudoku.pl

__DATA__
600 301 205
001 029 800
403 000 000

005 080 062
082 406 750
360 070 100

000 000 407
007 230 500
904 708 001
__END__

003 504 100
070 020 050
020 000 060

008 609 300
030 040 080
005 803 700

050 000 030
060 090 010
009 402 500

# solving sudoku p.3

100 907 003
080 000 070
009 000 600

007 209 400
410 000 095
008 504 300

003 000 700
050 000 040
240 806 099

# 97

000 000 000
000 000 000
000 000 000

000 000 000
000 000 000
000 000 000

000 000 000
000 000 000
000 000 000


120 907 203
680 030 970
379 000 600

537 289 416
412 763 895
968 514 327

893 000 762
756 392 148
241 876 539

# 97 9,2=4 ?

100 907 003
080 000 070
009 000 600

007 209 400
410 000 095
008 504 300

003 000 700
050 000 040
200 806 099

# 97

090 002 030
000 040 000
706 305 002

100 003 708
000 000 000
309 400 001

600 804 503
000 050 000
010 600 070
__END__

